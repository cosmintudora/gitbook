"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[2278],{39623:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>u,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"README","title":"Deploying Docusaurus to GitHub Pages with GitHub Actions","description":"To successfully deploy a Docusaurus site to GitHub Pages, a GitHub Action workflow must be implemented.","source":"@site/docs/README.md","sourceDirName":".","slug":"/","permalink":"/gitbook/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Setting up Docusaurus","permalink":"/gitbook/docs/intro"},"next":{"title":"Introduction","permalink":"/gitbook/docs/openapi/swagger-petstore-openapi-3-0"}}');var s=o(74848),i=o(28453);const r={},u="Deploying Docusaurus to GitHub Pages with GitHub Actions",a={},l=[{value:"GitHub Actions Workflow Configuration",id:"github-actions-workflow-configuration",level:2},{value:"Example Workflow File",id:"example-workflow-file",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"deploying-docusaurus-to-github-pages-with-github-actions",children:"Deploying Docusaurus to GitHub Pages with GitHub Actions"})}),"\n",(0,s.jsxs)(n.p,{children:["To successfully deploy a ",(0,s.jsx)(n.strong,{children:"Docusaurus"})," site to ",(0,s.jsx)(n.strong,{children:"GitHub Pages"}),", a ",(0,s.jsx)(n.strong,{children:"GitHub Action"})," workflow must be implemented."]}),"\n",(0,s.jsx)(n.h2,{id:"github-actions-workflow-configuration",children:"GitHub Actions Workflow Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The workflow should be defined in the following file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-plaintext",children:".github/workflows/deploy-page.yml\n"})}),"\n",(0,s.jsx)(n.h3,{id:"example-workflow-file",children:"Example Workflow File"}),"\n",(0,s.jsxs)(n.p,{children:["Below is an example configuration for ",(0,s.jsx)(n.code,{children:"deploy-page.yml"})," that automates the deployment process:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: Deploy Docusaurus to GitHub Pages\n\non:\n   push:\n      branches:\n         - main\n\njobs:\n   deploy:\n      runs-on: ubuntu-latest\n      steps:\n         - name: Checkout repository\n           uses: actions/checkout@v3\n           with:\n              fetch-depth: 0\n\n         - name: Set up Node.js\n           uses: actions/setup-node@v3\n           with:\n              node-version: 18\n\n         - name: Install dependencies\n           run: npm install\n           working-directory: ./my-docs\n\n         - name: Build Docusaurus site\n           run: npm run build\n           working-directory: ./my-docs\n\n         - name: Configure Git user (Optional, but recommended)\n           run: |\n              git config --global user.name "github-actions[bot]"\n              git config --global user.email "github-actions[bot]@users.noreply.github.com"\n\n         - name: Deploy to GitHub Pages\n           env:\n              GIT_PASS: ${{ secrets.GITHUB_TOKEN }}\n           run: GIT_USER="****" GIT_PASS=${{ secrets.GITHUB_TOKEN }} npm run deploy\n           working-directory: ./my-docs\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Ensure that the Docusaurus directory is my-docs. If your project uses a different directory, update the working-directory paths accordingly."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);